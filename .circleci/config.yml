version: 2

workflows:
  version: 2
  test-n-push:
    jobs:
    # Test all commits
    - test:
        filters:
          branches:
            only:
            - /.*/
    # Push master branch and all tags to ECR
    - push:
        requires:
          - test
        filters:
          branches:
            only:
            - master
          tags:
            only: /.*/

jobs:
  test:
    docker:
      # This is a Python 3.6 application
      - image: circleci/python:3.6.1
        environment:
          - PIPENV_VENV_IN_PROJECT=true
          - DJANGO_SETTINGS_MODULE=hra.settings.production
          # CFG_ environment variables are read by hra.settings.production
          - CFG_SECRET_KEY=iamnotsosecret
          - CFG_ALLOWED_HOSTS=localhost
          - DATABASE_URL=postgres://root@localhost/circle_test?sslmode=disable
      # Also run postgres service specified in DATABASE_URL
      - image: circleci/postgres:9.6-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # Fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install flake8 mock
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            flake8 --ignore=F405,E501,W503,W504 --exclude=venv/*,*/migrations/*,*/node_modules/*
            python manage.py check
            python manage.py makemigrations --check --noinput
            python manage.py test

  push:
    docker:
    # Use python image to get a shiny new awscli
    - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Push to ECR
        command: |
          # Install dependencies
          sudo pip install awscli
          # Extract the version, ignoring any non-semver devN suffix
          VERSION=$(cat version.txt | sed -e's/^\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*$/\1/')
          # If building a branch then append the build number to make a prerelease version number
          [ -n "$CIRCLE_BRANCH" ] && {
              VERSION="$VERSION-$CIRCLE_BUILD_NUM"
              # Write this back to the application
              echo "$VERSION" > version.txt
          }
          # Build image
          docker build -t "local:$VERSION" .
          # Tag and push images to ECR
          eval `aws ecr --region eu-west-2 get-login | sed -e's/-e none//'`
          docker tag "local:$VERSION" "$AWS_ECR_REGISTRY:$VERSION"
          echo "Pushing $AWS_ECR_REGISTRY:$VERSION"
          docker push "$AWS_ECR_REGISTRY:$VERSION"
          docker tag "local:$VERSION" "$AWS_ECR_REGISTRY:latest"
          echo "Pushing $AWS_ECR_REGISTRY:latest"
          docker push "$AWS_ECR_REGISTRY:latest"
